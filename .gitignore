#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Created by yyjn on 16-11-13

import tensorflow as tf
import numpy as np

# create data
x_data = np.random.rand(100).astype(np.float32)
y_data = x_data * 0.1 + 0.13

### create tensorflow struvture start
Weights = tf.Variable(tf.random_uniform([1], -1.0, 1.0))
biases = tf.Variable(tf.zeros([1]))
y = Weights * x_data + biases
loss = tf.reduce_mean(tf.square(y - y_data))
# train = tf.train.GradientDescentOptimizer(0.01).minimize(loss)
# train = tf.train.GradientDescentOptimizer(0.5)
optimizer = tf.train.GradientDescentOptimizer(0.5)
train =optimizer.minimize(loss)

init = tf.initialize_all_variables()
sess = tf.Session()
sess.run(init)
sess.run(train)

for step in range(2001):
    sess.run(train)
    if step % 20==0:
        print(step,sess.run(Weights),sess.run(biases))

if __name__ == '__main__':
    pass
